version: '3.6'
services:
  postgres:
    image: postgres:14
    volumes:
    - d1337db:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: M98vDBjHerkB44eYTM3t3sJSYfj2Vw
    ports:
      - "5432:5432"
    restart: always

  graphql-engine:
    image: hasura/graphql-engine:v2.4.0.cli-migrations-v3
    environment:
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:M98vDBjHerkB44eYTM3t3sJSYfj2Vw@postgres:5432/postgres
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:M98vDBjHerkB44eYTM3t3sJSYfj2Vw@postgres:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: "false"
      HASURA_GRAPHQL_DEV_MODE: "false"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: "hSK6kPeZN2zTLsvd2grPNtapLbeNzD9QU9aPd38f894JsmxM7Ecpb9hkAxeX"
      HASURA_GRAPHQL_ENABLE_TELEMETRY: "false"
      HASURA_GRAPHQL_JWT_SECRET: "{\"key\": \"9NE5uLKVMB5Pm3YNHXxKFBYyDCRP6FzFrY8CxmNFckQ6fJQKTvm5SHPCUE7Rma3WQpSzYh\",\"type\": \"HS256\",\"claims_format\": \"json\"}"
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: "guest"
      BACKEND_UNIQUE_KEY: "+8b3tShb%c%%_u!Teag7"
      BACKEND_URL: "http://webservice:4444"
    ports:
    - "3333:8080"
    depends_on:
    - "postgres"
    - "discordbot"
    restart: always

  webservice:
    build:
      context: ./webservice/
      dockerfile: Dockerfile
    image: webservice
    ports:
    - "4444:3000"
    depends_on:
    - "postgres"
    - "graphql-engine"
    - "websocket"
    - "game"
    restart: always

  discordbot:
    build:
      context: ./discordbot/
      dockerfile: Dockerfile
    image: discordbot
    ports:
    - "5555:3000"
    depends_on:
    - "postgres"
    restart: always

  websocket:
    build:
      context: ./websocket/
      dockerfile: Dockerfile
    image: websocket
    ports:
    - "6666:3000"
    depends_on:
    - "postgres"
    restart: always

  game:
    build:
      context: ./game/
      dockerfile: Dockerfile
    image: game
    ports:
    - "7777:3000"
    depends_on:
    - "postgres"
    - "graphql-engine"
    - "websocket"
    restart: always

volumes:
  d1337db:
